{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productVariantUpdate($input: ProductVariantInput!) {\\n    productVariantUpdate(input: $input) {\\n      product {\\n        title\\n      }\\n      productVariant {\\n        id\\n        price\\n      }\\n    }\\n  }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from \"react-apollo\";\nvar UPDATE_PRICE = gql(_templateObject());\n\nvar EditProduct =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  function EditProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      return React.createElement(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n        var showError = error && React.createElement(Banner, {\n          status: \"critical\"\n        }, error.message);\n        var showToast = data && data.productVariantUpdate && React.createElement(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n        return React.createElement(Page, null, React.createElement(Layout, null, showToast, React.createElement(Layout.Section, null, showError), React.createElement(Layout.Section, null, React.createElement(DisplayText, {\n          size: \"large\"\n        }, name), React.createElement(Form, null, React.createElement(Card, {\n          sectioned: true\n        }, React.createElement(FormLayout, null, React.createElement(FormLayout.Group, null, React.createElement(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), React.createElement(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), React.createElement(\"p\", null, \"This sale price will expire in two weeks on\", ' ', _this2.props.expires))), React.createElement(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: variantId,\n                price: discount\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        })))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/reggordon/src/github.com/Shopify/shopify_react_app/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","UPDATE_PRICE","EditProduct","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","itemToBeConsumed","state","name","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","props","expires","content","onAction","productVariableInput","variables","input","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SACIA,MADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIIC,IAJJ,EAKIC,UALJ,EAMIC,MANJ,EAOIC,IAPJ,EAQIC,WARJ,EASIC,SATJ,EAUIC,KAVJ,QAWO,kBAXP;AAYA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAGA,IAAMC,YAAY,GAAGF,GAAH,mBAAlB;;IAcMG,W;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,SAAS,EAAE;AAJP,K;;mEA+FO,UAAAC,KAAK,EAAI;AACpB,aAAO,UAAAC,KAAK;AAAA,eAAI,MAAKC,QAAL,qBAAiBF,KAAjB,EAAyBC,KAAzB,EAAJ;AAAA,OAAZ;AACH,K;;uEAEkB,YAAM;AACrB,UAAME,IAAI,GAAGZ,KAAK,CAACa,GAAN,CAAU,MAAV,CAAb;AACA,UAAMP,KAAK,GAAGM,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BV,KAA1C;AACA,UAAMC,SAAS,GAAGK,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC,EAA9C;AACA,UAAMC,UAAU,GAAGZ,KAAK,GAAG,GAA3B;;AACA,YAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,SAAS,EAAEA;AAA3B,OAAd;;AACA,aAAO,CAACD,KAAK,GAAGY,UAAT,EAAqBC,OAArB,CAA6B,CAA7B,CAAP;AACH,K;;;;;;;wCAlGmB;AAChB,WAAKR,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE,KAAKe,gBAAL;AAAZ,OAAd;AACH;;;6BAEQ;AAAA;;AAAA,wBACwC,KAAKC,KAD7C;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACShB,KADT,eACSA,KADT;AAAA,UACgBD,QADhB,eACgBA,QADhB;AAAA,UAC0BE,SAD1B,eAC0BA,SAD1B;AAEL,aACI,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAEJ;AADd,SAGK,UAACoB,YAAD,QAAmC;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAChC,YAAMC,SAAS,GAAGF,KAAK,IACnB,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAC;AAAf,WAA2BA,KAAK,CAACG,OAAjC,CADJ;AAGA,YAAMnB,SAAS,GAAGiB,IAAI,IAAIA,IAAI,CAACG,oBAAb,IACd,oBAAC,KAAD;AACI,UAAA,OAAO,EAAC,qBADZ;AAEI,UAAA,SAAS,EAAE;AAAA,mBAAM,MAAI,CAACjB,QAAL,CAAc;AAAEH,cAAAA,SAAS,EAAE;AAAb,aAAd,CAAN;AAAA;AAFf,UADJ;AAOZ,eACI,oBAAC,IAAD,QACI,oBAAC,MAAD,QACKA,SADL,EAEI,oBAAC,MAAD,CAAQ,OAAR,QACKkB,SADL,CAFJ,EAKI,oBAAC,MAAD,CAAQ,OAAR,QAEI,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAC;AAAlB,WAA2BJ,IAA3B,CAFJ,EAGI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,UAAA,SAAS;AAAf,WACI,oBAAC,UAAD,QACI,oBAAC,UAAD,CAAY,KAAZ,QACI,oBAAC,SAAD;AACI,UAAA,MAAM,EAAC,GADX;AAEI,UAAA,KAAK,EAAEhB,KAFX;AAGI,UAAA,QAAQ,EAAE,IAHd;AAII,UAAA,KAAK,EAAC,gBAJV;AAKI,UAAA,IAAI,EAAC;AALT,UADJ,EAQI,oBAAC,SAAD;AACI,UAAA,MAAM,EAAC,GADX;AAEI,UAAA,KAAK,EAAED,QAFX;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACwB,YAAL,CAAkB,UAAlB,CAHd;AAII,UAAA,KAAK,EAAC,kBAJV;AAKI,UAAA,IAAI,EAAC;AALT,UARJ,CADJ,EAiBI,8EACgD,GADhD,EAEK,MAAI,CAACC,KAAL,CAAWC,OAFhB,CAjBJ,CADJ,CADJ,EAyBI,oBAAC,WAAD;AACI,UAAA,aAAa,EAAE,CACX;AACIC,YAAAA,OAAO,EAAE,MADb;AAEIC,YAAAA,QAAQ,EAAE,oBAAM;AACZ,kBAAMC,oBAAoB,GAAG;AACzBjB,gBAAAA,EAAE,EAAEV,SADqB;AAEzBD,gBAAAA,KAAK,EAAED;AAFkB,eAA7B;AAIAkB,cAAAA,YAAY,CAAC;AACTY,gBAAAA,SAAS,EAAE;AAAEC,kBAAAA,KAAK,EAAEF;AAAT;AADF,eAAD,CAAZ;AAGH;AAVL,WADW,CADnB;AAeI,UAAA,gBAAgB,EAAE,CACd;AACIF,YAAAA,OAAO,EAAE;AADb,WADc;AAftB,UAzBJ,CAHJ,CALJ,CADJ,CADJ;AA6DS,OA3EL,CADJ;AA+EH;;;;EA9FqBK,KAAK,CAACC,S;;AA8GhC,eAAelC,WAAf","sourcesContent":["import {\n    Banner,\n    Card,\n    DisplayText,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    PageActions,\n    TextField,\n    Toast\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from \"react-apollo\";\n\n\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n  `;\n\nclass EditProduct extends React.Component {\n    state = {\n        discount: '',\n        price: '',\n        variantId: '',\n        showToast: true\n\n    };\n\n    componentDidMount() {\n        this.setState({ discount: this.itemToBeConsumed() });\n    }\n\n    render() {\n        const { name, price, discount, variantId } = this.state;\n        return (\n            <Mutation\n                mutation={UPDATE_PRICE}\n            >\n                {(handleSubmit, { error, data }) => {\n                    const showError = error && (\n                        <Banner status=\"critical\">{error.message}</Banner>\n                    );\n                    const showToast = data && data.productVariantUpdate && (\n                        <Toast\n                            content=\"Sucessfully updated\"\n                            onDismiss={() => this.setState({ showToast: false })}\n                        />\n                    );\n\n        return (\n            <Page>\n                <Layout>\n                    {showToast}\n                    <Layout.Section>\n                        {showError}\n                    </Layout.Section>\n                    <Layout.Section>\n\n                        <DisplayText size=\"large\">{name}</DisplayText>\n                        <Form>\n                            <Card sectioned>\n                                <FormLayout>\n                                    <FormLayout.Group>\n                                        <TextField\n                                            prefix=\"$\"\n                                            value={price}\n                                            disabled={true}\n                                            label=\"Original price\"\n                                            type=\"price\"\n                                        />\n                                        <TextField\n                                            prefix=\"$\"\n                                            value={discount}\n                                            onChange={this.handleChange('discount')}\n                                            label=\"Discounted price\"\n                                            type=\"discount\"\n                                        />\n                                    </FormLayout.Group>\n                                    <p>\n                                        This sale price will expire in two weeks on{' '}\n                                        {this.props.expires}\n                                    </p>\n                                </FormLayout>\n                            </Card>\n                            <PageActions\n                                primaryAction={[\n                                    {\n                                        content: 'Save',\n                                        onAction: () => {\n                                            const productVariableInput = {\n                                                id: variantId,\n                                                price: discount,\n                                            };\n                                            handleSubmit({\n                                                variables: { input: productVariableInput }\n                                            });\n                                        }\n                                    }\n                                ]}\n                                secondaryActions={[\n                                    {\n                                        content: 'Remove discount'\n                                    }\n                                ]}\n                            />\n                        </Form>\n                    </Layout.Section>\n                </Layout>\n            </Page>\n        );\n                }}\n            </Mutation>\n        );\n    }\n\n    handleChange = field => {\n        return value => this.setState({ [field]: value });\n    };\n\n    itemToBeConsumed = () => {\n        const item = store.get('item');\n        const price = item.variants.edges[0].node.price;\n        const variantId = item.variants.edges[0].node.id;\n        const discounter = price * 0.1;\n        this.setState({ price: price, variantId: variantId });\n        return (price - discounter).toFixed(2);\n    };\n}\n\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}