{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport * as PropTypes from 'prop-types';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      item: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redirectToProduct\", function () {\n      var redirect = Redirect.create(_this.context.polaris.appBridge);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n      return React.createElement(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return React.createElement(\"div\", null, \"Loading\\u2026\");\n        if (error) return React.createElement(\"div\", null, error.message);\n        console.log(data);\n        return React.createElement(Card, {\n          sectioned: true\n        }, React.createElement(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = React.createElement(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            });\n            var price = item.variants.edges[0].node.price;\n            return React.createElement(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              onClick: function onClick() {\n                store.set('item', item);\n\n                _this2.redirectToProduct();\n              }\n            }, React.createElement(Stack, null, React.createElement(Stack.Item, {\n              fill: true\n            }, React.createElement(\"h3\", null, React.createElement(TextStyle, {\n              variation: \"strong\"\n            }, item.title))), React.createElement(Stack.Item, null, React.createElement(\"p\", null, \"$\", price)), React.createElement(Stack.Item, null, React.createElement(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextTypes\", {\n  polaris: PropTypes.object\n});\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/reggordon/src/github.com/Shopify/shopify_react_app/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","PropTypes","GET_PRODUCTS_BY_ID","ResourceListWithProducts","item","redirect","create","context","polaris","appBridge","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","media","images","edges","node","originalSrc","altText","price","variants","id","title","set","redirectToProduct","React","Component","object"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport * as PropTypes from 'prop-types';\n\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n\n  state = {\n    item: '',\n  };\n\n  static contextTypes = {\n    polaris: PropTypes.object\n  };\n\n  redirectToProduct = () => {\n    const redirect = Redirect.create(this.context.polaris.appBridge);\n    redirect.dispatch(\n      Redirect.Action.APP,\n      '/edit-products'\n    );\n  };\n\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loadingâ€¦</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          return (\n            <Card sectioned>\n              <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n                renderItem={item => {\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );\n                  const price = item.variants.edges[0].node.price;\n                  return (\n                    <ResourceList.Item\n                      id={item.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.title}`}\n                      onClick={() => {\n                        store.set('item', item);\n                        this.redirectToProduct();\n                      }\n                      }\n                    >\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                              {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>${price}</p>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}